name: go-test
#     ~~~~~~~
# https://github.com/kunitsucom/ilog.go/workflows/go-test/badge.svg
#                                                 ~~~~~~~

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/dependabot.yml'
      - '.github/pull_request_template.md'
      - '.github/release.yml'
      - 'README.md'
  pull_request:
    # branches:
    #   - main
    paths-ignore:
      - '.github/dependabot.yml'
      - '.github/pull_request_template.md'
      - '.github/release.yml'
      - 'README.md'
  workflow_dispatch:
    inputs: {}

# NOTE: 連続で commit ＆ push した時に最新の commit 以外のワークフローをキャンセルする
concurrency:
  group: ${{ github.workflow }}-${{ github.base_ref }}-${{ github.head_ref }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  WORKDIR: .

defaults:
  run:
    shell: bash

jobs:
  go-test: # NOTE: for Branch protection rule `Status checks that are required.`
    runs-on: ubuntu-latest # ref. https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps:
      - uses: actions/checkout@v3
      - name: DEBUG
        run: |
          cat <<'DEBUG_DOC'
          == DEBUG =======================================================
          github.ref: ${{ github.ref }}
          github.event_name: ${{ github.event_name }}
          -- toJSON(github.event.inputs) ---------------------------------
          ${{ toJSON(github.event.inputs) }}
          -- toJSON(github) ----------------------------------------------
          ${{ toJSON(github) }}
          ================================================================
          DEBUG_DOC
        shell: bash
      - name: actions/cache for versenv
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/versenv
          key: versenv-${{ runner.os }}-${{ hashFiles('**/.versenv.env') }}
          restore-keys: |
            versenv-${{ runner.os }}-
      - name: Add GITHUB_PATH, GITHUB_ENV
        run: |
          # Update GITHUB_PATH
          cat <<GITHUB_PATH >> $GITHUB_PATH
          ${PWD}/${{ env.WORKDIR }}/.local/bin
          ${PWD}/.bin
          GITHUB_PATH
          # Update GITHUB_ENV
          grep -Ev '^\s*$|^\s*#' .versenv.env >> $GITHUB_ENV
      - name: Setup versenv
        run: |
          # Setup versenv
          direnv allow ${{ env.WORKDIR }}
          make versenv
      - uses: actions/setup-go@v4 # ref. https://github.com/actions/setup-go#usage
        id: setup-go
        with:
          cache: false
          go-version-file: ${{ env.WORKDIR }}/go.mod
      - name: Get Golang info
        id: golang-info
        run: |
          echo "GOVERSION=$(go version | cut -d' ' -f3)" >> "$GITHUB_OUTPUT"
          echo "GOCACHE=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"
      - name: actions/cache for go
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ${{ steps.golang-info.outputs.GOCACHE }}
          key: ${{ runner.os }}-go-${{ steps.golang-info.outputs.GOVERSION }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ steps.golang-info.outputs.GOVERSION }}-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-${{ steps.golang-info.outputs.GOVERSION }}-
            ${{ runner.os }}-go-
      - name: Run go test
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        working-directory: ${{ env.WORKDIR }}
        run: |
          direnv exec . make test
      - uses: codecov/codecov-action@v3 # ref. https://github.com/codecov/codecov-action#example-workflowyml-with-codecov-action
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.WORKDIR }}/coverage.txt
